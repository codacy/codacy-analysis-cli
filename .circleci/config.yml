version: 2.1

orbs:
  codacy: codacy/base@10.11.0
  slack: circleci/slack@3.3.0

references:
  restore_maven_dependencies: &restore_maven_dependencies
    restore_cache:
      keys:
        - maven-dependencies-1.0.13-{{ checksum "pom.xml" }}
        - maven-dependencies-1.0.13

  run_integration_tests: &run_integration_tests
    machine: true
    working_directory: ~/integration-tests
    steps:
      - add_ssh_keys:
          fingerprints:
            - "df:83:d7:c7:d5:79:06:c2:3b:d1:fd:e2:a3:d1:12:c5"
      - run:
          name: Checkout integration tests
          working_directory: ~/
          command: |
            ssh-keyscan bitbucket.org >> ~/.ssh/known_hosts
            bash -c "`curl -fsSL https://raw.githubusercontent.com/codacy/codacy-analysis-cli/master/scripts/checkout.sh`" -s git@bitbucket.org:qamine/qa-automation-tests.git ~/integration-tests master
      - *restore_maven_dependencies
      - attach_workspace:
          at: /tmp/workspace/workdir
      # Clean CODACY_PROJECT_TOKEN is needed to make sure tests are run in a clean state without
      # influence from the build server environment
      # (e.g.: to avoid tests picking the CODACY_PROJECT_TOKEN used to send coverage
      # and incorrectly using it to obtain remote configurations)
      - run:
          name: Clean CODACY_PROJECT_TOKEN
          command: echo 'unset CODACY_PROJECT_TOKEN' >> $BASH_ENV
      - run:
          name: Load docker from file
          command: |
            if [[ "$CODACY_ANALYSIS_CLI_VERSION" != "latest" ]]
            then
              docker load --input /tmp/workspace/workdir/docker-image.tar
              docker tag codacy-analysis-cli:dev-snapshot codacy/codacy-analysis-cli:dev-snapshot
            else
              echo "Skipping load of docker when testing latest"
            fi
      - run:
          name: Setup codacy-analysis-cli version for integration tests
          command: |
            if [[ -z "$CODACY_ANALYSIS_CLI_VERSION" ]]
            then
              echo 'export CODACY_ANALYSIS_CLI_VERSION="dev-snapshot"' >> $BASH_ENV
            fi
      - run:
          name: Install codacy-analysis-cli
          command: |
            curl -L https://github.com/codacy/codacy-analysis-cli/archive/master.tar.gz | tar xvz
            cd codacy-analysis-cli-* && sudo make install
            rm -rf codacy-analysis-cli-*
      - run:
          name: Run tests
          command: |
            export EXECUTION_TIME=`date +%F_%Hh%M-%Z`
            mvn test -DsuiteFile=$TEST_PATH -Drp.description=$EXECUTION_TIME -Drp.api.key=$RP_CIRCLECI_API_KEY -Drp.launch=$LAUNCH_NAME -Drp.project=$PROJECT_NAME -Drp.mode=DEFAULT -Drp.endpoint=$RP_ENDPOINT -Drp.tags=$LAUNCH_TAG
      - run:
          name: Save test results
          command: |
            mkdir -p ~/junit/
            find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/junit/ \;
          when: always
      - store_test_results:
          path: ~/junit
      - store_artifacts:
          path: ~/junit
      - store_artifacts:
          path: ExtentReports/
      - run:
          name: Set right slack token
          command: |
            if [[ $ENVIRONMENT == "production" ]]
            then
              echo "export SLACK_TOKEN=$SLACK_TOKEN_PROD" >> $BASH_ENV
            else
              echo "export SLACK_TOKEN=$SLACK_TOKEN_STAGING" >> $BASH_ENV
            fi
      - slack/status:
          fail_only: false
          only_for_branches: "master"
          webhook: https://hooks.slack.com/services/$SLACK_TOKEN
          failure_message: ":red_circle: A $CIRCLE_JOB job has failed! See more on: $RP_LAUNCH_URL, login with the default user."

  cache_prefix: &cache_prefix sbt-cache-06112023

jobs:
  maven_dependencies:
    docker:
      - image: circleci/openjdk:8-jdk
        environment:
          JAVA_OPTS: "-XX:MinRAMPercentage=60.0 -XX:MaxRAMPercentage=90.0"
    environment:
      JAVA_OPTS: -Xmx3200m
    working_directory: ~/integration-tests
    steps:
      - add_ssh_keys:
          fingerprints:
            - "df:83:d7:c7:d5:79:06:c2:3b:d1:fd:e2:a3:d1:12:c5"
      - run:
          name: Checkout integration tests
          command: |
            ssh-keyscan bitbucket.org >> ~/.ssh/known_hosts
            bash -c "`curl -fsSL https://raw.githubusercontent.com/codacy/codacy-analysis-cli/master/scripts/checkout.sh`" -s git@bitbucket.org:qamine/qa-automation-tests.git ~/integration-tests master
      - *restore_maven_dependencies
      - run: mvn dependency:go-offline
      - run:
          name: Compile tests
          command: mvn test-compile
      - save_cache:
          key: maven-dependencies-1.0.13-{{ checksum "pom.xml" }}
          paths:
            - ~/.m2
  test_cli_staging:
    <<: *run_integration_tests
    environment:
      TEST_PATH: Suite/CLI/STAGING.xml
      LAUNCH_TAG: CIRCLECI;CLI;STAGING
      PROJECT_NAME: codacy-analysis-cli
      LAUNCH_NAME: CLI_STAGING
      RP_LAUNCH_URL: https://rp.dev.codacy.org/ui/#codacy-analysis-cli/launches/all
      ENVIRONMENT: staging
  test_cli_production:
    <<: *run_integration_tests
    environment:
      TEST_PATH: Suite/CLI/PROD.xml
      CODACY_ANALYSIS_CLI_VERSION: latest
      LAUNCH_TAG: CIRCLECI;CLI;PROD
      PROJECT_NAME: codacy-analysis-cli
      LAUNCH_NAME: CLI_PROD
      RP_LAUNCH_URL: https://rp.dev.codacy.org/ui/#codacy-analysis-cli/launches/all
      ENVIRONMENT: production

workflows:
  version: 2
  test-and-publish:
    jobs:
      - codacy/checkout_and_version:
          write_sbt_version: true
      - codacy/sbt:
          name: compile
          install_sbt_version: 1.8.2
          cmd: sbt coverage +test:compile
          cache_prefix: *cache_prefix
          persist_to_workspace: true
          steps_before_sbt:
            - run:
                name: Enable coverage
                command: echo "ThisBuild / coverageEnabled := true" > coverage.sbt
          steps:
            - run:
                name: Check formatting Sbt files
                command: sbt scalafmtSbtCheck
            - run:
                name: Check formatting Scala files
                command: sbt scalafmtCheckAll
            - run:
                name: Test compile
                command: sbt test:compile
            - run:
                name: It compile
                command: sbt it:compile
            - run:
                name: Unit testing
                command: sbt test
            - run:
                name: Aggregate coverage reports
                command: sbt coverageAggregate
            - run:
                name: Send coverage report to Codacy
                command: |
                  bash <(curl -Ls https://coverage.codacy.com/get.sh)
            - run:
                name: Clean coverage.sbt from cache
                command: rm coverage.sbt
          requires:
            - codacy/checkout_and_version
      - codacy/sbt:
          name: lint
          install_sbt_version: 1.8.2
          cmd: |
            sbt "scalafmtCheckAll;scalafmtSbtCheck;scapegoat;scalafixEnable;scalafix --test"
          cache_prefix: *cache_prefix
          requires:
            - compile
      - codacy/sbt:
          name: test
          install_sbt_version: 1.8.2
          cmd: |
            git config --global user.email "team@codacy.com"
            git config --global user.name "Codacy Team"
            sbt coverage +test coverageReport
            bash <(curl -Ls https://coverage.codacy.com/get.sh) report --skip
          cache_prefix: *cache_prefix
          requires:
            - compile
      - codacy/sbt:
          name: publish_docker_locally
          install_sbt_version: 1.8.2
          cmd: |
            sbt "set codacyAnalysisCli / version := \"dev-snapshot\";
                 codacyAnalysisCli/stage"
            docker build -t $CIRCLE_PROJECT_REPONAME:dev-snapshot .
            docker save --output docker-image.tar $CIRCLE_PROJECT_REPONAME:dev-snapshot
          cache_prefix: *cache_prefix
          persist_to_workspace: true
          requires:
            - compile
      # TODO: Re-enable after https://codacy.atlassian.net/browse/CY-4147
      # - maven_dependencies:
      #     filters:
      #       branches:
      #         only:
      #           - master
      #     requires:
      #       - test
      #       - lint
      #       - publish_docker_locally
      # - test_cli_staging:
      #     requires:
      #       - maven_dependencies
      - codacy/sbt:
          name: publish_lib
          install_sbt_version: 1.8.2
          context: CodacyAWS
          cmd: |
            sbt "retrieveGPGKeys;
                 codacyAnalysisCore/publishSigned;
                 +codacyAnalysisModels/publishSigned;
                 sonatypeBundleRelease"
          cache_prefix: *cache_prefix
          requires:
            - publish_docker_locally
          filters:
            branches:
              only:
                - master
      - codacy/publish_docker:
          name: publish_dockerhub
          context: CodacyDocker
          docker_tag: dev-snapshot
          requires:
            - publish_docker_locally
          filters:
            branches:
              only:
                - master
      - codacy/sbt:
          name: build_cli_jar
          install_sbt_version: 1.8.2
          persist_to_workspace: true
          cmd: |
            sbt "set codacyAnalysisCli / version := \"$(cat .version)\";
                 set assembly / test := {};
                 codacyAnalysisCli/assembly"
            mkdir -p ~/workdir/artifacts/
            mv ./cli/target/scala-2.12/codacy-analysis-cli-assembly-$(cat .version).jar ~/workdir/artifacts/
          cache_prefix: *cache_prefix
          requires:
            - publish_docker_locally
          filters:
            branches:
              only:
                - master
      - codacy/publish_ghr:
          context: CodacyGitHub
          path: ~/workdir/artifacts/
          requires:
            - publish_dockerhub
            - build_cli_jar
      - publish_dockerhub_stable_hold:
          context: CodacyDocker
          type: approval
          requires:
            - publish_docker_locally
          filters:
            branches:
              only:
                - master
      - codacy/publish_docker:
          name: publish_dockerhub_stable
          context: CodacyDocker
          docker_tag: dev-snapshot
          release_tag: stable
          requires:
            - publish_dockerhub_stable_hold
  # TODO: Re-enable after https://codacy.atlassian.net/browse/CY-4147
  # nightly:
  #   triggers:
  #     - schedule:
  #         cron: "0 0 * * *" # Every day “At minute 00:00”
  #         filters:
  #           branches:
  #             only:
  #               - master
  #   jobs:
  #     - maven_dependencies
  #     - test_cli_production:
  #         requires:
  #           - maven_dependencies
